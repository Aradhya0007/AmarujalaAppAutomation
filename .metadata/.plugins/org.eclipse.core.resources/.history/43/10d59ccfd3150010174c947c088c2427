package basetest;

import java.io.IOException;
import java.lang.reflect.Field;

import org.openqa.selenium.WebDriver;
import org.testng.ITestContext;
import org.testng.ITestListener;
import org.testng.ITestResult;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.Status;

import io.appium.java_client.android.AndroidDriver;

public class Listeners implements ITestListener {

    ExtentReports extent = Report.getReportObject();
    ExtentTest test;
    ThreadLocal<ExtentTest> extentTest = new ThreadLocal<>();

    @Override
    public void onTestStart(ITestResult result) {
        test = extent.createTest(result.getMethod().getMethodName());
        extentTest.set(test);
    }

    @Override
    public void onTestSuccess(ITestResult result) {
        extentTest.get().log(Status.PASS, "‚úÖ Test Passed");
    }

    @Override
    public void onTestFailure(ITestResult result) {
        extentTest.get().log(Status.FAIL, "‚ùå Test Failed");

        extentTest.get().log(Status.FAIL, "üìÑ Exception: " + result.getThrowable());

        AndroidDriver driver = null;
        try {
            // Get the driver instance via reflection
            Field driverField = result.getTestClass().getRealClass().getDeclaredField("driver");
            driverField.setAccessible(true);
            driver = (AndroidDriver) driverField.get(result.getInstance());
        } catch (Exception e) {
            extentTest.get().log(Status.WARNING, "‚ö†Ô∏è Could not fetch WebDriver instance.");
        }

        // Screenshot logic
        try {
            String methodName = result.getMethod().getMethodName();
            String screenshotPath = your.package.BaseTest.getScreenshot(methodName, driver);
            extentTest.get().addScreenCaptureFromPath(screenshotPath, "üì∑ Screenshot on Failure");
        } catch (IOException e) {
            extentTest.get().log(Status.WARNING, "‚ö†Ô∏è Failed to attach screenshot");
        }

        // Optional: log class + method
        extentTest.get().log(Status.INFO, "üß† Class: " + result.getTestClass().getName());
        extentTest.get().log(Status.INFO, "üß† Method: " + result.getMethod().getMethodName());
    }

    @Override
    public void onTestSkipped(ITestResult result) {
        extentTest.get().log(Status.SKIP, "‚è≠Ô∏è Test Skipped");
    }

    @Override
    public void onFinish(ITestContext context) {
        extent.flush();
    }
}
